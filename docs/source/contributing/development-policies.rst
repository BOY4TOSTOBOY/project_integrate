.. _development_policies:

####################
Политика разработки
####################


******
Review
******



*********************
Планирование выпусков
*********************


.. _branch_policy:

*********
Ветвление
*********


Ветви:

 ``development``
    Ветвь, которая содержит актуальную кодовую базу
 ``master``
    Ветвь для релизов
 ``feature branches``
    Ветви с новым функционалом
 ``bugfix branches``
    Ветви для фиксов

Фичевые ветви
~~~~~~~~~~~~~~~~

Должна быть основана на ветви **development**

Должна быть слита с ветвью **development**

Конвенция наименования: :code:`feature/<Issue-ID>`

Создание ветвьи::

 $ git checkout -b feature/<Issue-ID> development

Слияние ветвей::

 $ git checkout -b feature/<Issue-ID> origin/feature/<Issue-ID>
 $ git merge development
    # Resolve conflicts if need
 $ git checkout development
 $ git merge —no-ff feature/<Issue-ID>


Ветви для фиксов
~~~~~~~~~~~~~~~~

Должна быть основана на ветке **development**

Должна быть слита с веткой **development**

Конвенция наименования: :code:`bugfix/<Issue-ID>`

Создание ветки::

 $ git checkout -b bugfix/<Issue-ID> development

Слияние ветвей::

 $ git checkout -b bugfix/<Issue-ID> origin/bugfix/<Issue-ID>
 $ git merge development
    # Resolve conflicts if need
 $ git checkout development
 $ git merge —no-ff bugfix/<Issue-ID>


.. _commit_policy:

*******
Коммиты
*******


Сообщения коммитов
==================

Пример коммита::


   <тип коммита>:Суммируйте описание изменений укладываясь в 50 символов

   Более детальный текст. Ограничьте его 72 символами. Пустая линия между
   загловоком и телом коммита - обязательна(если тело коммита присутствует).

   Тело коммита. Опционально. Опишите проблему которую исправляет текущий
   коммит. Фокусируйтесь на причине изменений, вместо их
   описания(это объяснит код). Если есть какие-либо side-effects
   или другие неинтуитивные последствия этих изменений, то это место
   где их следует описать.

   Также можно использовать не нумерованные списки:
   - Каждый элемент списка начинается с дефиса и окружен символами
     пробела с обеих сторон

   Если используется системя контроля тикетов(issue tracker) разместите
   ссылки на тикеты здесь:

   <Задача>: #123
   [См.также: #456, #789]

Дополнительные требования:

#. Указывайте тип коммита (`пример <https://github.com/commitizen/cz-cli>`_):
      - *feat*: новый функионал(new feature)
      - *fix*: фикс багов
      - *style*: обновление внешнего вида кода
      - *refactor*: рефакторинг
      - *test*: все связанное с тестированием
      - *docs*: все вязанное с документацией
#. Используйте повелительное наклонение в заголовке коммита
#. Не ставте точку вконце загловка
#. Загловок и каждый параграф начинается с заглавной буквы